name: Continuous Integration
on: [push]
jobs:
  lint:
    name: Lint with Flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run flake8
        run: python -m flake8 --select=C,E,F,W,S,B,B9 --exclude=staticfiles,manage.py --ignore=S106 --max-line-length=100 web/**/*.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: gethyped
          POSTGRES_DB: hyp2
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9.x'
    - name: Cache dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-site-packages
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements.txt') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Migrate database
      env:
        DB: postgres
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DB_USER: runner
        DB_PASSWORD: gethyped
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      working-directory: ./web
      run: python manage.py migrate
    - name: Run tests
      env:
        DB: postgres
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DB_USER: runner
        DB_PASSWORD: gethyped
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      working-directory: ./web
      run: python manage.py test hyp/tests --settings=web.settings.testing
  deploy:
    name: Deploy to Heroku
    needs: [lint, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - name: push to Heroku
        run: |
          touch .netrc
          echo "machine api.heroku.com" >> .netrc
          echo "  login dan_murphy@hey.com" >> .netrc
          echo "  password ${{ secrets.HEROKU_PASSWORD }}" >> .netrc
          echo "machine git.heroku.com" >> .netrc
          echo "  login dan_murphy@hey.com" >> .netrc
          echo "  password ${{ secrets.HEROKU_PASSWORD }}" >> .netrc
          git remote add heroku https://git.heroku.com/hyyyp.git
          git push heroku main
