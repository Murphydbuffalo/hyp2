/*
We write our CSS according to Maintainable CSS: https://maintainablecss.com/

This means we organize our styles into modules, components, states, and modifiers.

Modules are collections of components. They don't make sense/break if you remove
one of the constituent components. You might use multiple modules in a page, but
removing any one module shouldn't break the others.

Components are independent and reusable.

Some examples:
"In a website the header, registration form, shopping basket, article, product list,
navigation and homepage promo can all be considered to be modules."

"A logo module might consist of copy, an image and a link, each of which are components.
Without the image the logo is broken, without the link the logo is incomplete."

To avoid difficulties overriding selectors with a high specificity we use
flat, class-based selectors of the form `.module-component-state`.

Sadly, the `django-sass` library doesn't allow for importing files from a parent
directory, so we don't nest our Sass files in directories like `modules/`.
*/

/* Modules */
@import "auth_module";
@import "api_key_list_module";
@import "api_key_form_module";
@import "experiment_details_module";
@import "experiment_form_module";
@import "experiment_list_module";
@import "home_module";
@import "navbar_module";
@import "settings_module";

/* Components shared across multiple modules */

/* States */
@import "states";

/* Miscellaneous */
@import "base";
@import "mixins";
@import "utils";
@import "variables";
