.shared-form {
  display: flex;
  gap: 8px;
  flex-direction: column;
  padding: 56px;
  margin: 0;
  background-color: $smoke;
  border-radius: 40px;
  color: $grey;
  text-align: center;
  width: 350px;
  box-shadow: 0px 4px 32px 16px rgba(0, 0, 0, 0.35);
  transition: .25s;
  will-change: transform;

  &:hover {
    box-shadow: 0px 4px 64px 16px rgba(0, 0, 0, 0.5);
    transform: scale(1.01);
  }

  input {
    display: flex;
    font-size: 16px;
    line-height: 21px;
    padding: 24px;
    background-color: $black;
    border-radius: 16px;
    border: none;
    text-align: left;
    width: 100%;
  }

  /*
    Ideally we would not use the `primary-button` mixin or nested selectors for
    these styles. We're doing so because we dynamically render forms in our
    templates, and as a result don't currently have direct control over the input
    HTML.

    I'm sure we could find a way to change that, maybe by telling Django what classes
    to use when generating form input HTML, or by wrapping the dynamically generated
    inputs in divs with classes of our choosing.

    That being said, I think this is fine for now. We can always clean this up
    later if we feele the ROI is there.
  */
  input[type="submit"] {
    @include primary-button;
  }
}
